@page "/demandes"
@* Demandes.razor - Liste des demandes de congés *@
@using System.Globalization
@using GestionConge.Client.Models
@inject NavigationManager NavigationManager
@inject GestionConge.Client.Services.DemandeService DemandeService

<PageTitle>Mes demandes - GCO</PageTitle>

@code {
    private List<DemandeCongeDto> demandes = new();
    private List<DemandeCongeDto> filteredDemandes = new();
    private string selectedStatus = "";
    private string selectedType = "";
    private string selectedPeriod = "";
    private string viewMode = "table";

    protected override async Task OnInitializedAsync()
    {
        var result = await DemandeService.GetDemandesAsync();
        demandes = result?.ToList() ?? new();
        filteredDemandes = demandes;
    }

    private void OnStatusFilterChange(ChangeEventArgs e)
    {
        selectedStatus = e.Value?.ToString() ?? "";
        ApplyFilters();
    }

    private void OnTypeFilterChange(ChangeEventArgs e)
    {
        selectedType = e.Value?.ToString() ?? "";
        ApplyFilters();
    }

    private void OnPeriodFilterChange(ChangeEventArgs e)
    {
        selectedPeriod = e.Value?.ToString() ?? "";
        ApplyFilters();
    }

    private void ClearFilters()
    {
        selectedStatus = "";
        selectedType = "";
        selectedPeriod = "";
        filteredDemandes = demandes;
    }

    private void ApplyFilters()
    {
        filteredDemandes = demandes.Where(d =>
            (string.IsNullOrEmpty(selectedStatus) || d.Statut == selectedStatus) &&
            (string.IsNullOrEmpty(selectedType) || d.Motif == selectedType) &&
            (string.IsNullOrEmpty(selectedPeriod) || IsInSelectedPeriod(d.DateSoumission))
        ).ToList();
    }

    private bool IsInSelectedPeriod(DateTime date)
    {
        if (selectedPeriod == "thisMonth")
            return date.Month == DateTime.Now.Month && date.Year == DateTime.Now.Year;
        if (selectedPeriod == "lastMonth")
        {
            var lastMonth = DateTime.Now.AddMonths(-1);
            return date.Month == lastMonth.Month && date.Year == lastMonth.Year;
        }
        if (selectedPeriod == "thisYear")
            return date.Year == DateTime.Now.Year;
        return true;
    }

    private void SetViewMode(string mode)
    {
        viewMode = mode;
    }

    private string GetDateRange(DateTime debut, DateTime fin)
    {
        return $"{(fin - debut).Days + 1} jour{((fin - debut).Days > 0 ? "s" : "")}";
    }

    private string GetTypeBadgeClass(string type)
    {
        return type switch
        {
            "Congés payés" => "bg-success",
            "RTT" => "bg-info",
            "Congé maladie" => "bg-warning",
            "Congé sans solde" => "bg-secondary",
            _ => "bg-light text-dark"
        };
    }

    private string GetStatusBadgeClass(string statut)
    {
        return statut switch
        {
            "En attente" => "bg-warning",
            "Approuvé" => "bg-success",
            "Rejeté" => "bg-danger",
            "Annulé" => "bg-secondary",
            _ => "bg-light text-dark"
        };
    }

    private void ViewDemande(int id)
    {
        NavigationManager.NavigateTo($"/demande-details/{id}");
    }

    private void EditDemande(int id)
    {
        NavigationManager.NavigateTo($"/demande-edit/{id}");
    }

    private void CancelDemande(int id)
    {
        // Annulation logique ici
    }
}

<div class="page-header">
    <div class="row align-items-center">
        <div class="col-md-6">
            <h1 class="page-title">
                <i class="fas fa-list-alt me-3"></i>
                Mes demandes de congés
            </h1>
            <p class="page-subtitle">Gérez vos demandes de congés et consultez leur statut</p>
        </div>
        <div class="col-md-6 text-md-end">
            <a href="/demande-form" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>
                Nouvelle demande
            </a>
        </div>
    </div>
</div>

<!-- Filtres -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Statut</label>
                <select class="form-select" @onchange="OnStatusFilterChange">
                    <option value="">Tous les statuts</option>
                    <option value="En attente">En attente</option>
                    <option value="Approuvé">Approuvé</option>
                    <option value="Rejeté">Rejeté</option>
                    <option value="Annulé">Annulé</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Type de congé</label>
                <select class="form-select" @onchange="OnTypeFilterChange">
                    <option value="">Tous les types</option>
                    <option value="Congés payés">Congés payés</option>
                    <option value="RTT">RTT</option>
                    <option value="Congé maladie">Congé maladie</option>
                    <option value="Congé sans solde">Congé sans solde</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Période</label>
                <select class="form-select" @onchange="OnPeriodFilterChange">
                    <option value="">Toute période</option>
                    <option value="thisMonth">Ce mois</option>
                    <option value="lastMonth">Mois dernier</option>
                    <option value="thisYear">Cette année</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button class="btn btn-outline-secondary w-100" @onclick="ClearFilters">
                    <i class="fas fa-times me-2"></i>
                    Effacer les filtres
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Statistiques rapides -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="stat-card stat-total">
            <div class="stat-icon">
                <i class="fas fa-calendar-alt"></i>
            </div>
            <div class="stat-content">
                <h3>@filteredDemandes.Count()</h3>
                <p>Total demandes</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card stat-pending">
            <div class="stat-icon">
                <i class="fas fa-clock"></i>
            </div>
            <div class="stat-content">
                <h3>@filteredDemandes.Count(d => d.Statut == "En attente")</h3>
                <p>En attente</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card stat-approved">
            <div class="stat-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-content">
                <h3>@filteredDemandes.Count(d => d.Statut == "Approuvé")</h3>
                <p>Approuvées</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card stat-rejected">
            <div class="stat-icon">
                <i class="fas fa-times-circle"></i>
            </div>
            <div class="stat-content">
                <h3>@filteredDemandes.Count(d => d.Statut == "Rejeté")</h3>
                <p>Rejetées</p>
            </div>
        </div>
    </div>
</div>

<!-- Liste des demandes -->
<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Liste des demandes (@filteredDemandes.Count())</h5>
            <div class="btn-group" role="group">
                <button class="btn btn-outline-secondary btn-sm @(viewMode == "table" ? "active" : "")"
                        @onclick="@(() => SetViewMode("table"))">
                    <i class="fas fa-table"></i>
                </button>
                <button class="btn btn-outline-secondary btn-sm @(viewMode == "cards" ? "active" : "")"
                        @onclick="@(() => SetViewMode("cards"))">
                    <i class="fas fa-th-large"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (filteredDemandes.Any())
        {
            @if (viewMode == "table")
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Date de soumission</th>
                                <th>Période demandée</th>
                                <th>Type</th>
                                <th>Durée</th>
                                <th>Statut</th>
                                <th>Motif</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var demande in filteredDemandes.OrderByDescending(d => d.DateSoumission))
                            {
                                <tr>
                                    <td>
                                        <div>
                                            <strong>@demande.DateSoumission.ToString("dd/MM/yyyy")</strong>
                                            <br /><small class="text-muted">@demande.DateSoumission.ToString("HH:mm")</small>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@demande.DateDebut.ToString("dd/MM") - @demande.DateFin.ToString("dd/MM/yyyy")</strong>
                                            <br /><small class="text-muted">@GetDateRange(demande.DateDebut, demande.DateFin)</small>
                                        </div>
                                    </td>
                                    @* <td>
                                        <span class="badge @GetTypeBadgeClass(demande.TypeConge)">
                                            @demande.TypeConge
                                        </span>
                                    </td> *@
                                    <td>
                                        <strong>@GetDateRange(demande.DateDebut, demande.DateFin)</strong>
                                    </td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(demande.Statut)">
                                            @demande.Statut
                                        </span>
                                    </td>
                                    <td>
                                        <div class="motif-cell">
                                            @if (!string.IsNullOrEmpty(demande.Motif))
                                            {
                                                <span title="@demande.Motif">
                                                    @(demande.Motif.Length > 50 ? demande.Motif.Substring(0, 50) + "..." : demande.Motif)
                                                </span>
                                            }
                                            else
                                            {
                                                <small class="text-muted">Aucun motif</small>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewDemande(demande.Id)">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            @if (demande.Statut == "En attente")
                                            {
                                                <button class="btn btn-sm btn-outline-warning" @onclick="() => EditDemande(demande.Id)">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger" @onclick="() => CancelDemande(demande.Id)">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else if (viewMode == "cards")
            {
                <div class="row">
                    @foreach (var demande in filteredDemandes.OrderByDescending(d => d.DateSoumission))
                    {
                        <div class="col-md-6 col-lg-4 mb-3">
                            <div class="card demande-card h-100">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <span class="badge @GetStatusBadgeClass(demande.Statut)">
                                        @demande.Statut
                                    </span>
                                    <small class="text-muted">
                                        @demande.DateSoumission.ToString("dd/MM/yyyy HH:mm", CultureInfo.InvariantCulture)
                                    </small>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">@demande.Motif</h5>
                                    <p class="card-text">
                                        <strong>@demande.DateDebut.ToString("dd/MM") - @demande.DateFin.ToString("dd/MM/yyyy")</strong>
                                        <br />
                                        <small class="text-muted">@GetDateRange(demande.DateDebut, demande.DateFin)</small>
                                    </p>
                                    <p class="card-text">
                                        @if (!string.IsNullOrEmpty(demande.Motif))
                                        {
                                            @(demande.Motif.Length > 80 ? demande.Motif.Substring(0, 80) + "..." : demande.Motif)
                                        }
                                        else
                                        {
                                            <small class="text-muted">Aucun motif</small>
                                        }
                                    </p>
                                </div>
                                <div class="card-footer d-flex justify-content-end">
                                    <button class="btn btn-sm btn-outline-primary me-1" @onclick="() => ViewDemande(demande.Id)">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    @if (demande.Statut == "En attente")
                                    {
                                        <button class="btn btn-sm btn-outline-warning me-1" @onclick="() => EditDemande(demande.Id)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => CancelDemande(demande.Id)">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <div class="text-center text-muted">
                <i class="fas fa-inbox fa-3x mb-3"></i>
                <p>Aucune demande trouvée</p>
            </div>
        }
    </div>
</div>